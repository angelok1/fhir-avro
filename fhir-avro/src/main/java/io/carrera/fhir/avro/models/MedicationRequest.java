/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.carrera.fhir.avro.models;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class MedicationRequest extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2383236103545079963L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MedicationRequest\",\"namespace\":\"io.carrera.fhir.avro.models\",\"fields\":[{\"name\":\"medicationCodeableConcept\",\"type\":{\"type\":\"record\",\"name\":\"CodeableConcept\",\"fields\":[{\"name\":\"coding\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Coding\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",\"string\"]}]}}}]}},{\"name\":\"medicationReference\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Reference\",\"fields\":[{\"name\":\"reference\",\"type\":\"string\"}]}]},{\"name\":\"authoredOn\",\"type\":\"int\",\"logicalType\":\"date\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<MedicationRequest> ENCODER =
      new BinaryMessageEncoder<MedicationRequest>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<MedicationRequest> DECODER =
      new BinaryMessageDecoder<MedicationRequest>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<MedicationRequest> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<MedicationRequest> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<MedicationRequest> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<MedicationRequest>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this MedicationRequest to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a MedicationRequest from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a MedicationRequest instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static MedicationRequest fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private io.carrera.fhir.avro.models.CodeableConcept medicationCodeableConcept;
   private io.carrera.fhir.avro.models.Reference medicationReference;
   private int authoredOn;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public MedicationRequest() {}

  /**
   * All-args constructor.
   * @param medicationCodeableConcept The new value for medicationCodeableConcept
   * @param medicationReference The new value for medicationReference
   * @param authoredOn The new value for authoredOn
   */
  public MedicationRequest(io.carrera.fhir.avro.models.CodeableConcept medicationCodeableConcept, io.carrera.fhir.avro.models.Reference medicationReference, java.lang.Integer authoredOn) {
    this.medicationCodeableConcept = medicationCodeableConcept;
    this.medicationReference = medicationReference;
    this.authoredOn = authoredOn;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return medicationCodeableConcept;
    case 1: return medicationReference;
    case 2: return authoredOn;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: medicationCodeableConcept = (io.carrera.fhir.avro.models.CodeableConcept)value$; break;
    case 1: medicationReference = (io.carrera.fhir.avro.models.Reference)value$; break;
    case 2: authoredOn = (java.lang.Integer)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'medicationCodeableConcept' field.
   * @return The value of the 'medicationCodeableConcept' field.
   */
  public io.carrera.fhir.avro.models.CodeableConcept getMedicationCodeableConcept() {
    return medicationCodeableConcept;
  }


  /**
   * Sets the value of the 'medicationCodeableConcept' field.
   * @param value the value to set.
   */
  public void setMedicationCodeableConcept(io.carrera.fhir.avro.models.CodeableConcept value) {
    this.medicationCodeableConcept = value;
  }

  /**
   * Gets the value of the 'medicationReference' field.
   * @return The value of the 'medicationReference' field.
   */
  public io.carrera.fhir.avro.models.Reference getMedicationReference() {
    return medicationReference;
  }


  /**
   * Sets the value of the 'medicationReference' field.
   * @param value the value to set.
   */
  public void setMedicationReference(io.carrera.fhir.avro.models.Reference value) {
    this.medicationReference = value;
  }

  /**
   * Gets the value of the 'authoredOn' field.
   * @return The value of the 'authoredOn' field.
   */
  public int getAuthoredOn() {
    return authoredOn;
  }


  /**
   * Sets the value of the 'authoredOn' field.
   * @param value the value to set.
   */
  public void setAuthoredOn(int value) {
    this.authoredOn = value;
  }

  /**
   * Creates a new MedicationRequest RecordBuilder.
   * @return A new MedicationRequest RecordBuilder
   */
  public static io.carrera.fhir.avro.models.MedicationRequest.Builder newBuilder() {
    return new io.carrera.fhir.avro.models.MedicationRequest.Builder();
  }

  /**
   * Creates a new MedicationRequest RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new MedicationRequest RecordBuilder
   */
  public static io.carrera.fhir.avro.models.MedicationRequest.Builder newBuilder(io.carrera.fhir.avro.models.MedicationRequest.Builder other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.MedicationRequest.Builder();
    } else {
      return new io.carrera.fhir.avro.models.MedicationRequest.Builder(other);
    }
  }

  /**
   * Creates a new MedicationRequest RecordBuilder by copying an existing MedicationRequest instance.
   * @param other The existing instance to copy.
   * @return A new MedicationRequest RecordBuilder
   */
  public static io.carrera.fhir.avro.models.MedicationRequest.Builder newBuilder(io.carrera.fhir.avro.models.MedicationRequest other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.MedicationRequest.Builder();
    } else {
      return new io.carrera.fhir.avro.models.MedicationRequest.Builder(other);
    }
  }

  /**
   * RecordBuilder for MedicationRequest instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MedicationRequest>
    implements org.apache.avro.data.RecordBuilder<MedicationRequest> {

    private io.carrera.fhir.avro.models.CodeableConcept medicationCodeableConcept;
    private io.carrera.fhir.avro.models.CodeableConcept.Builder medicationCodeableConceptBuilder;
    private io.carrera.fhir.avro.models.Reference medicationReference;
    private io.carrera.fhir.avro.models.Reference.Builder medicationReferenceBuilder;
    private int authoredOn;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.carrera.fhir.avro.models.MedicationRequest.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.medicationCodeableConcept)) {
        this.medicationCodeableConcept = data().deepCopy(fields()[0].schema(), other.medicationCodeableConcept);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasMedicationCodeableConceptBuilder()) {
        this.medicationCodeableConceptBuilder = io.carrera.fhir.avro.models.CodeableConcept.newBuilder(other.getMedicationCodeableConceptBuilder());
      }
      if (isValidValue(fields()[1], other.medicationReference)) {
        this.medicationReference = data().deepCopy(fields()[1].schema(), other.medicationReference);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (other.hasMedicationReferenceBuilder()) {
        this.medicationReferenceBuilder = io.carrera.fhir.avro.models.Reference.newBuilder(other.getMedicationReferenceBuilder());
      }
      if (isValidValue(fields()[2], other.authoredOn)) {
        this.authoredOn = data().deepCopy(fields()[2].schema(), other.authoredOn);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
    }

    /**
     * Creates a Builder by copying an existing MedicationRequest instance
     * @param other The existing instance to copy.
     */
    private Builder(io.carrera.fhir.avro.models.MedicationRequest other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.medicationCodeableConcept)) {
        this.medicationCodeableConcept = data().deepCopy(fields()[0].schema(), other.medicationCodeableConcept);
        fieldSetFlags()[0] = true;
      }
      this.medicationCodeableConceptBuilder = null;
      if (isValidValue(fields()[1], other.medicationReference)) {
        this.medicationReference = data().deepCopy(fields()[1].schema(), other.medicationReference);
        fieldSetFlags()[1] = true;
      }
      this.medicationReferenceBuilder = null;
      if (isValidValue(fields()[2], other.authoredOn)) {
        this.authoredOn = data().deepCopy(fields()[2].schema(), other.authoredOn);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'medicationCodeableConcept' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.CodeableConcept getMedicationCodeableConcept() {
      return medicationCodeableConcept;
    }


    /**
      * Sets the value of the 'medicationCodeableConcept' field.
      * @param value The value of 'medicationCodeableConcept'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationRequest.Builder setMedicationCodeableConcept(io.carrera.fhir.avro.models.CodeableConcept value) {
      validate(fields()[0], value);
      this.medicationCodeableConceptBuilder = null;
      this.medicationCodeableConcept = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'medicationCodeableConcept' field has been set.
      * @return True if the 'medicationCodeableConcept' field has been set, false otherwise.
      */
    public boolean hasMedicationCodeableConcept() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'medicationCodeableConcept' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.CodeableConcept.Builder getMedicationCodeableConceptBuilder() {
      if (medicationCodeableConceptBuilder == null) {
        if (hasMedicationCodeableConcept()) {
          setMedicationCodeableConceptBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder(medicationCodeableConcept));
        } else {
          setMedicationCodeableConceptBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder());
        }
      }
      return medicationCodeableConceptBuilder;
    }

    /**
     * Sets the Builder instance for the 'medicationCodeableConcept' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.MedicationRequest.Builder setMedicationCodeableConceptBuilder(io.carrera.fhir.avro.models.CodeableConcept.Builder value) {
      clearMedicationCodeableConcept();
      medicationCodeableConceptBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'medicationCodeableConcept' field has an active Builder instance
     * @return True if the 'medicationCodeableConcept' field has an active Builder instance
     */
    public boolean hasMedicationCodeableConceptBuilder() {
      return medicationCodeableConceptBuilder != null;
    }

    /**
      * Clears the value of the 'medicationCodeableConcept' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationRequest.Builder clearMedicationCodeableConcept() {
      medicationCodeableConcept = null;
      medicationCodeableConceptBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'medicationReference' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Reference getMedicationReference() {
      return medicationReference;
    }


    /**
      * Sets the value of the 'medicationReference' field.
      * @param value The value of 'medicationReference'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationRequest.Builder setMedicationReference(io.carrera.fhir.avro.models.Reference value) {
      validate(fields()[1], value);
      this.medicationReferenceBuilder = null;
      this.medicationReference = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'medicationReference' field has been set.
      * @return True if the 'medicationReference' field has been set, false otherwise.
      */
    public boolean hasMedicationReference() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'medicationReference' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Reference.Builder getMedicationReferenceBuilder() {
      if (medicationReferenceBuilder == null) {
        if (hasMedicationReference()) {
          setMedicationReferenceBuilder(io.carrera.fhir.avro.models.Reference.newBuilder(medicationReference));
        } else {
          setMedicationReferenceBuilder(io.carrera.fhir.avro.models.Reference.newBuilder());
        }
      }
      return medicationReferenceBuilder;
    }

    /**
     * Sets the Builder instance for the 'medicationReference' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.MedicationRequest.Builder setMedicationReferenceBuilder(io.carrera.fhir.avro.models.Reference.Builder value) {
      clearMedicationReference();
      medicationReferenceBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'medicationReference' field has an active Builder instance
     * @return True if the 'medicationReference' field has an active Builder instance
     */
    public boolean hasMedicationReferenceBuilder() {
      return medicationReferenceBuilder != null;
    }

    /**
      * Clears the value of the 'medicationReference' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationRequest.Builder clearMedicationReference() {
      medicationReference = null;
      medicationReferenceBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'authoredOn' field.
      * @return The value.
      */
    public int getAuthoredOn() {
      return authoredOn;
    }


    /**
      * Sets the value of the 'authoredOn' field.
      * @param value The value of 'authoredOn'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationRequest.Builder setAuthoredOn(int value) {
      validate(fields()[2], value);
      this.authoredOn = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'authoredOn' field has been set.
      * @return True if the 'authoredOn' field has been set, false otherwise.
      */
    public boolean hasAuthoredOn() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'authoredOn' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationRequest.Builder clearAuthoredOn() {
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public MedicationRequest build() {
      try {
        MedicationRequest record = new MedicationRequest();
        if (medicationCodeableConceptBuilder != null) {
          try {
            record.medicationCodeableConcept = this.medicationCodeableConceptBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("medicationCodeableConcept"));
            throw e;
          }
        } else {
          record.medicationCodeableConcept = fieldSetFlags()[0] ? this.medicationCodeableConcept : (io.carrera.fhir.avro.models.CodeableConcept) defaultValue(fields()[0]);
        }
        if (medicationReferenceBuilder != null) {
          try {
            record.medicationReference = this.medicationReferenceBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("medicationReference"));
            throw e;
          }
        } else {
          record.medicationReference = fieldSetFlags()[1] ? this.medicationReference : (io.carrera.fhir.avro.models.Reference) defaultValue(fields()[1]);
        }
        record.authoredOn = fieldSetFlags()[2] ? this.authoredOn : (java.lang.Integer) defaultValue(fields()[2]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<MedicationRequest>
    WRITER$ = (org.apache.avro.io.DatumWriter<MedicationRequest>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<MedicationRequest>
    READER$ = (org.apache.avro.io.DatumReader<MedicationRequest>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    this.medicationCodeableConcept.customEncode(out);

    if (this.medicationReference == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.medicationReference.customEncode(out);
    }

    out.writeInt(this.authoredOn);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (this.medicationCodeableConcept == null) {
        this.medicationCodeableConcept = new io.carrera.fhir.avro.models.CodeableConcept();
      }
      this.medicationCodeableConcept.customDecode(in);

      if (in.readIndex() != 1) {
        in.readNull();
        this.medicationReference = null;
      } else {
        if (this.medicationReference == null) {
          this.medicationReference = new io.carrera.fhir.avro.models.Reference();
        }
        this.medicationReference.customDecode(in);
      }

      this.authoredOn = in.readInt();

    } else {
      for (int i = 0; i < 3; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (this.medicationCodeableConcept == null) {
            this.medicationCodeableConcept = new io.carrera.fhir.avro.models.CodeableConcept();
          }
          this.medicationCodeableConcept.customDecode(in);
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.medicationReference = null;
          } else {
            if (this.medicationReference == null) {
              this.medicationReference = new io.carrera.fhir.avro.models.Reference();
            }
            this.medicationReference.customDecode(in);
          }
          break;

        case 2:
          this.authoredOn = in.readInt();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










