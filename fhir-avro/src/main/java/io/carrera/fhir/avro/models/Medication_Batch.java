/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.carrera.fhir.avro.models;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Medication_Batch extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6415944236492779733L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Medication_Batch\",\"namespace\":\"io.carrera.fhir.avro.models\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"string\"]},{\"name\":\"extension\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Extension\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"string\"]},{\"name\":\"extension\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Extension\"}]},{\"name\":\"url\",\"type\":[\"null\",\"string\"]}]}}]},{\"name\":\"modifierExtension\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Extension\"}]},{\"name\":\"lotNumber\",\"type\":[\"null\",\"string\"]},{\"name\":\"expirationDate\",\"type\":[\"null\",{\"type\":\"int\",\"logicalType\":\"date\"},{\"type\":\"long\",\"logicalType\":\"local-timestamp-micros\"}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.DateConversion());
  }

  private static final BinaryMessageEncoder<Medication_Batch> ENCODER =
      new BinaryMessageEncoder<Medication_Batch>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Medication_Batch> DECODER =
      new BinaryMessageDecoder<Medication_Batch>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Medication_Batch> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Medication_Batch> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Medication_Batch> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Medication_Batch>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Medication_Batch to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Medication_Batch from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Medication_Batch instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Medication_Batch fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence id;
   private java.util.List<io.carrera.fhir.avro.models.Extension> extension;
   private java.util.List<io.carrera.fhir.avro.models.Extension> modifierExtension;
   private java.lang.CharSequence lotNumber;
   private java.lang.Object expirationDate;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Medication_Batch() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param extension The new value for extension
   * @param modifierExtension The new value for modifierExtension
   * @param lotNumber The new value for lotNumber
   * @param expirationDate The new value for expirationDate
   */
  public Medication_Batch(java.lang.CharSequence id, java.util.List<io.carrera.fhir.avro.models.Extension> extension, java.util.List<io.carrera.fhir.avro.models.Extension> modifierExtension, java.lang.CharSequence lotNumber, java.lang.Object expirationDate) {
    this.id = id;
    this.extension = extension;
    this.modifierExtension = modifierExtension;
    this.lotNumber = lotNumber;
    this.expirationDate = expirationDate;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return extension;
    case 2: return modifierExtension;
    case 3: return lotNumber;
    case 4: return expirationDate;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: extension = (java.util.List<io.carrera.fhir.avro.models.Extension>)value$; break;
    case 2: modifierExtension = (java.util.List<io.carrera.fhir.avro.models.Extension>)value$; break;
    case 3: lotNumber = (java.lang.CharSequence)value$; break;
    case 4: expirationDate = value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'extension' field.
   * @return The value of the 'extension' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.Extension> getExtension() {
    return extension;
  }


  /**
   * Sets the value of the 'extension' field.
   * @param value the value to set.
   */
  public void setExtension(java.util.List<io.carrera.fhir.avro.models.Extension> value) {
    this.extension = value;
  }

  /**
   * Gets the value of the 'modifierExtension' field.
   * @return The value of the 'modifierExtension' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.Extension> getModifierExtension() {
    return modifierExtension;
  }


  /**
   * Sets the value of the 'modifierExtension' field.
   * @param value the value to set.
   */
  public void setModifierExtension(java.util.List<io.carrera.fhir.avro.models.Extension> value) {
    this.modifierExtension = value;
  }

  /**
   * Gets the value of the 'lotNumber' field.
   * @return The value of the 'lotNumber' field.
   */
  public java.lang.CharSequence getLotNumber() {
    return lotNumber;
  }


  /**
   * Sets the value of the 'lotNumber' field.
   * @param value the value to set.
   */
  public void setLotNumber(java.lang.CharSequence value) {
    this.lotNumber = value;
  }

  /**
   * Gets the value of the 'expirationDate' field.
   * @return The value of the 'expirationDate' field.
   */
  public java.lang.Object getExpirationDate() {
    return expirationDate;
  }


  /**
   * Sets the value of the 'expirationDate' field.
   * @param value the value to set.
   */
  public void setExpirationDate(java.lang.Object value) {
    this.expirationDate = value;
  }

  /**
   * Creates a new Medication_Batch RecordBuilder.
   * @return A new Medication_Batch RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Medication_Batch.Builder newBuilder() {
    return new io.carrera.fhir.avro.models.Medication_Batch.Builder();
  }

  /**
   * Creates a new Medication_Batch RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Medication_Batch RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Medication_Batch.Builder newBuilder(io.carrera.fhir.avro.models.Medication_Batch.Builder other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.Medication_Batch.Builder();
    } else {
      return new io.carrera.fhir.avro.models.Medication_Batch.Builder(other);
    }
  }

  /**
   * Creates a new Medication_Batch RecordBuilder by copying an existing Medication_Batch instance.
   * @param other The existing instance to copy.
   * @return A new Medication_Batch RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Medication_Batch.Builder newBuilder(io.carrera.fhir.avro.models.Medication_Batch other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.Medication_Batch.Builder();
    } else {
      return new io.carrera.fhir.avro.models.Medication_Batch.Builder(other);
    }
  }

  /**
   * RecordBuilder for Medication_Batch instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Medication_Batch>
    implements org.apache.avro.data.RecordBuilder<Medication_Batch> {

    private java.lang.CharSequence id;
    private java.util.List<io.carrera.fhir.avro.models.Extension> extension;
    private java.util.List<io.carrera.fhir.avro.models.Extension> modifierExtension;
    private java.lang.CharSequence lotNumber;
    private java.lang.Object expirationDate;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.carrera.fhir.avro.models.Medication_Batch.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.extension)) {
        this.extension = data().deepCopy(fields()[1].schema(), other.extension);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.modifierExtension)) {
        this.modifierExtension = data().deepCopy(fields()[2].schema(), other.modifierExtension);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.lotNumber)) {
        this.lotNumber = data().deepCopy(fields()[3].schema(), other.lotNumber);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.expirationDate)) {
        this.expirationDate = data().deepCopy(fields()[4].schema(), other.expirationDate);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
    }

    /**
     * Creates a Builder by copying an existing Medication_Batch instance
     * @param other The existing instance to copy.
     */
    private Builder(io.carrera.fhir.avro.models.Medication_Batch other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.extension)) {
        this.extension = data().deepCopy(fields()[1].schema(), other.extension);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.modifierExtension)) {
        this.modifierExtension = data().deepCopy(fields()[2].schema(), other.modifierExtension);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.lotNumber)) {
        this.lotNumber = data().deepCopy(fields()[3].schema(), other.lotNumber);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.expirationDate)) {
        this.expirationDate = data().deepCopy(fields()[4].schema(), other.expirationDate);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Medication_Batch.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Medication_Batch.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'extension' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.Extension> getExtension() {
      return extension;
    }


    /**
      * Sets the value of the 'extension' field.
      * @param value The value of 'extension'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Medication_Batch.Builder setExtension(java.util.List<io.carrera.fhir.avro.models.Extension> value) {
      validate(fields()[1], value);
      this.extension = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'extension' field has been set.
      * @return True if the 'extension' field has been set, false otherwise.
      */
    public boolean hasExtension() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'extension' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Medication_Batch.Builder clearExtension() {
      extension = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'modifierExtension' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.Extension> getModifierExtension() {
      return modifierExtension;
    }


    /**
      * Sets the value of the 'modifierExtension' field.
      * @param value The value of 'modifierExtension'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Medication_Batch.Builder setModifierExtension(java.util.List<io.carrera.fhir.avro.models.Extension> value) {
      validate(fields()[2], value);
      this.modifierExtension = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'modifierExtension' field has been set.
      * @return True if the 'modifierExtension' field has been set, false otherwise.
      */
    public boolean hasModifierExtension() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'modifierExtension' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Medication_Batch.Builder clearModifierExtension() {
      modifierExtension = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'lotNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getLotNumber() {
      return lotNumber;
    }


    /**
      * Sets the value of the 'lotNumber' field.
      * @param value The value of 'lotNumber'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Medication_Batch.Builder setLotNumber(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.lotNumber = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'lotNumber' field has been set.
      * @return True if the 'lotNumber' field has been set, false otherwise.
      */
    public boolean hasLotNumber() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'lotNumber' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Medication_Batch.Builder clearLotNumber() {
      lotNumber = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'expirationDate' field.
      * @return The value.
      */
    public java.lang.Object getExpirationDate() {
      return expirationDate;
    }


    /**
      * Sets the value of the 'expirationDate' field.
      * @param value The value of 'expirationDate'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Medication_Batch.Builder setExpirationDate(java.lang.Object value) {
      validate(fields()[4], value);
      this.expirationDate = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'expirationDate' field has been set.
      * @return True if the 'expirationDate' field has been set, false otherwise.
      */
    public boolean hasExpirationDate() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'expirationDate' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Medication_Batch.Builder clearExpirationDate() {
      expirationDate = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Medication_Batch build() {
      try {
        Medication_Batch record = new Medication_Batch();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.extension = fieldSetFlags()[1] ? this.extension : (java.util.List<io.carrera.fhir.avro.models.Extension>) defaultValue(fields()[1]);
        record.modifierExtension = fieldSetFlags()[2] ? this.modifierExtension : (java.util.List<io.carrera.fhir.avro.models.Extension>) defaultValue(fields()[2]);
        record.lotNumber = fieldSetFlags()[3] ? this.lotNumber : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.expirationDate = fieldSetFlags()[4] ? this.expirationDate :  defaultValue(fields()[4]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Medication_Batch>
    WRITER$ = (org.apache.avro.io.DatumWriter<Medication_Batch>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Medication_Batch>
    READER$ = (org.apache.avro.io.DatumReader<Medication_Batch>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










