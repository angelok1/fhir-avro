/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.optum.fhir.avro.models;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class RiskAssessment extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2274370332163483249L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RiskAssessment\",\"namespace\":\"com.optum.fhir.avro.models\",\"fields\":[{\"name\":\"resourceType\",\"type\":\"string\"},{\"name\":\"meta\",\"type\":[\"null\",\"string\"]},{\"name\":\"implicitRules\",\"type\":[\"null\",\"string\"]},{\"name\":\"language\",\"type\":[\"null\",\"string\"]},{\"name\":\"text\",\"type\":[\"null\",\"string\"]},{\"name\":\"contained\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}]},{\"name\":\"extension\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}]},{\"name\":\"modifierExtension\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}]},{\"name\":\"identifier\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}]},{\"name\":\"basedOn\",\"type\":[\"null\",\"string\"]},{\"name\":\"parent\",\"type\":[\"null\",\"string\"]},{\"name\":\"status\",\"type\":[\"null\",\"string\"]},{\"name\":\"method\",\"type\":[\"null\",\"string\"]},{\"name\":\"code\",\"type\":[\"null\",\"string\"]},{\"name\":\"subject\",\"type\":\"string\"},{\"name\":\"encounter\",\"type\":[\"null\",\"string\"]},{\"name\":\"occurrenceDateTime\",\"type\":[\"null\",{\"type\":\"int\",\"logicalType\":\"date\"},{\"type\":\"long\",\"logicalType\":\"local-timestamp-micros\"}]},{\"name\":\"occurrencePeriod\",\"type\":[\"null\",\"string\"]},{\"name\":\"condition\",\"type\":[\"null\",\"string\"]},{\"name\":\"performer\",\"type\":[\"null\",\"string\"]},{\"name\":\"reasonCode\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}]},{\"name\":\"reasonReference\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}]},{\"name\":\"basis\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}]},{\"name\":\"prediction\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}]},{\"name\":\"mitigation\",\"type\":[\"null\",\"string\"]},{\"name\":\"note\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.DateConversion());
  }

  private static final BinaryMessageEncoder<RiskAssessment> ENCODER =
      new BinaryMessageEncoder<RiskAssessment>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<RiskAssessment> DECODER =
      new BinaryMessageDecoder<RiskAssessment>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<RiskAssessment> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<RiskAssessment> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<RiskAssessment> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<RiskAssessment>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this RiskAssessment to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a RiskAssessment from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a RiskAssessment instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static RiskAssessment fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence resourceType;
   private java.lang.CharSequence meta;
   private java.lang.CharSequence implicitRules;
   private java.lang.CharSequence language;
   private java.lang.CharSequence text;
   private java.util.List<java.lang.CharSequence> contained;
   private java.util.List<java.lang.CharSequence> extension;
   private java.util.List<java.lang.CharSequence> modifierExtension;
   private java.util.List<java.lang.CharSequence> identifier;
   private java.lang.CharSequence basedOn;
   private java.lang.CharSequence parent;
   private java.lang.CharSequence status;
   private java.lang.CharSequence method;
   private java.lang.CharSequence code;
   private java.lang.CharSequence subject;
   private java.lang.CharSequence encounter;
   private java.lang.Object occurrenceDateTime;
   private java.lang.CharSequence occurrencePeriod;
   private java.lang.CharSequence condition;
   private java.lang.CharSequence performer;
   private java.util.List<java.lang.CharSequence> reasonCode;
   private java.util.List<java.lang.CharSequence> reasonReference;
   private java.util.List<java.lang.CharSequence> basis;
   private java.util.List<java.lang.CharSequence> prediction;
   private java.lang.CharSequence mitigation;
   private java.util.List<java.lang.CharSequence> note;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public RiskAssessment() {}

  /**
   * All-args constructor.
   * @param resourceType The new value for resourceType
   * @param meta The new value for meta
   * @param implicitRules The new value for implicitRules
   * @param language The new value for language
   * @param text The new value for text
   * @param contained The new value for contained
   * @param extension The new value for extension
   * @param modifierExtension The new value for modifierExtension
   * @param identifier The new value for identifier
   * @param basedOn The new value for basedOn
   * @param parent The new value for parent
   * @param status The new value for status
   * @param method The new value for method
   * @param code The new value for code
   * @param subject The new value for subject
   * @param encounter The new value for encounter
   * @param occurrenceDateTime The new value for occurrenceDateTime
   * @param occurrencePeriod The new value for occurrencePeriod
   * @param condition The new value for condition
   * @param performer The new value for performer
   * @param reasonCode The new value for reasonCode
   * @param reasonReference The new value for reasonReference
   * @param basis The new value for basis
   * @param prediction The new value for prediction
   * @param mitigation The new value for mitigation
   * @param note The new value for note
   */
  public RiskAssessment(java.lang.CharSequence resourceType, java.lang.CharSequence meta, java.lang.CharSequence implicitRules, java.lang.CharSequence language, java.lang.CharSequence text, java.util.List<java.lang.CharSequence> contained, java.util.List<java.lang.CharSequence> extension, java.util.List<java.lang.CharSequence> modifierExtension, java.util.List<java.lang.CharSequence> identifier, java.lang.CharSequence basedOn, java.lang.CharSequence parent, java.lang.CharSequence status, java.lang.CharSequence method, java.lang.CharSequence code, java.lang.CharSequence subject, java.lang.CharSequence encounter, java.lang.Object occurrenceDateTime, java.lang.CharSequence occurrencePeriod, java.lang.CharSequence condition, java.lang.CharSequence performer, java.util.List<java.lang.CharSequence> reasonCode, java.util.List<java.lang.CharSequence> reasonReference, java.util.List<java.lang.CharSequence> basis, java.util.List<java.lang.CharSequence> prediction, java.lang.CharSequence mitigation, java.util.List<java.lang.CharSequence> note) {
    this.resourceType = resourceType;
    this.meta = meta;
    this.implicitRules = implicitRules;
    this.language = language;
    this.text = text;
    this.contained = contained;
    this.extension = extension;
    this.modifierExtension = modifierExtension;
    this.identifier = identifier;
    this.basedOn = basedOn;
    this.parent = parent;
    this.status = status;
    this.method = method;
    this.code = code;
    this.subject = subject;
    this.encounter = encounter;
    this.occurrenceDateTime = occurrenceDateTime;
    this.occurrencePeriod = occurrencePeriod;
    this.condition = condition;
    this.performer = performer;
    this.reasonCode = reasonCode;
    this.reasonReference = reasonReference;
    this.basis = basis;
    this.prediction = prediction;
    this.mitigation = mitigation;
    this.note = note;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return resourceType;
    case 1: return meta;
    case 2: return implicitRules;
    case 3: return language;
    case 4: return text;
    case 5: return contained;
    case 6: return extension;
    case 7: return modifierExtension;
    case 8: return identifier;
    case 9: return basedOn;
    case 10: return parent;
    case 11: return status;
    case 12: return method;
    case 13: return code;
    case 14: return subject;
    case 15: return encounter;
    case 16: return occurrenceDateTime;
    case 17: return occurrencePeriod;
    case 18: return condition;
    case 19: return performer;
    case 20: return reasonCode;
    case 21: return reasonReference;
    case 22: return basis;
    case 23: return prediction;
    case 24: return mitigation;
    case 25: return note;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: resourceType = (java.lang.CharSequence)value$; break;
    case 1: meta = (java.lang.CharSequence)value$; break;
    case 2: implicitRules = (java.lang.CharSequence)value$; break;
    case 3: language = (java.lang.CharSequence)value$; break;
    case 4: text = (java.lang.CharSequence)value$; break;
    case 5: contained = (java.util.List<java.lang.CharSequence>)value$; break;
    case 6: extension = (java.util.List<java.lang.CharSequence>)value$; break;
    case 7: modifierExtension = (java.util.List<java.lang.CharSequence>)value$; break;
    case 8: identifier = (java.util.List<java.lang.CharSequence>)value$; break;
    case 9: basedOn = (java.lang.CharSequence)value$; break;
    case 10: parent = (java.lang.CharSequence)value$; break;
    case 11: status = (java.lang.CharSequence)value$; break;
    case 12: method = (java.lang.CharSequence)value$; break;
    case 13: code = (java.lang.CharSequence)value$; break;
    case 14: subject = (java.lang.CharSequence)value$; break;
    case 15: encounter = (java.lang.CharSequence)value$; break;
    case 16: occurrenceDateTime = value$; break;
    case 17: occurrencePeriod = (java.lang.CharSequence)value$; break;
    case 18: condition = (java.lang.CharSequence)value$; break;
    case 19: performer = (java.lang.CharSequence)value$; break;
    case 20: reasonCode = (java.util.List<java.lang.CharSequence>)value$; break;
    case 21: reasonReference = (java.util.List<java.lang.CharSequence>)value$; break;
    case 22: basis = (java.util.List<java.lang.CharSequence>)value$; break;
    case 23: prediction = (java.util.List<java.lang.CharSequence>)value$; break;
    case 24: mitigation = (java.lang.CharSequence)value$; break;
    case 25: note = (java.util.List<java.lang.CharSequence>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'resourceType' field.
   * @return The value of the 'resourceType' field.
   */
  public java.lang.CharSequence getResourceType() {
    return resourceType;
  }


  /**
   * Sets the value of the 'resourceType' field.
   * @param value the value to set.
   */
  public void setResourceType(java.lang.CharSequence value) {
    this.resourceType = value;
  }

  /**
   * Gets the value of the 'meta' field.
   * @return The value of the 'meta' field.
   */
  public java.lang.CharSequence getMeta() {
    return meta;
  }


  /**
   * Sets the value of the 'meta' field.
   * @param value the value to set.
   */
  public void setMeta(java.lang.CharSequence value) {
    this.meta = value;
  }

  /**
   * Gets the value of the 'implicitRules' field.
   * @return The value of the 'implicitRules' field.
   */
  public java.lang.CharSequence getImplicitRules() {
    return implicitRules;
  }


  /**
   * Sets the value of the 'implicitRules' field.
   * @param value the value to set.
   */
  public void setImplicitRules(java.lang.CharSequence value) {
    this.implicitRules = value;
  }

  /**
   * Gets the value of the 'language' field.
   * @return The value of the 'language' field.
   */
  public java.lang.CharSequence getLanguage() {
    return language;
  }


  /**
   * Sets the value of the 'language' field.
   * @param value the value to set.
   */
  public void setLanguage(java.lang.CharSequence value) {
    this.language = value;
  }

  /**
   * Gets the value of the 'text' field.
   * @return The value of the 'text' field.
   */
  public java.lang.CharSequence getText() {
    return text;
  }


  /**
   * Sets the value of the 'text' field.
   * @param value the value to set.
   */
  public void setText(java.lang.CharSequence value) {
    this.text = value;
  }

  /**
   * Gets the value of the 'contained' field.
   * @return The value of the 'contained' field.
   */
  public java.util.List<java.lang.CharSequence> getContained() {
    return contained;
  }


  /**
   * Sets the value of the 'contained' field.
   * @param value the value to set.
   */
  public void setContained(java.util.List<java.lang.CharSequence> value) {
    this.contained = value;
  }

  /**
   * Gets the value of the 'extension' field.
   * @return The value of the 'extension' field.
   */
  public java.util.List<java.lang.CharSequence> getExtension() {
    return extension;
  }


  /**
   * Sets the value of the 'extension' field.
   * @param value the value to set.
   */
  public void setExtension(java.util.List<java.lang.CharSequence> value) {
    this.extension = value;
  }

  /**
   * Gets the value of the 'modifierExtension' field.
   * @return The value of the 'modifierExtension' field.
   */
  public java.util.List<java.lang.CharSequence> getModifierExtension() {
    return modifierExtension;
  }


  /**
   * Sets the value of the 'modifierExtension' field.
   * @param value the value to set.
   */
  public void setModifierExtension(java.util.List<java.lang.CharSequence> value) {
    this.modifierExtension = value;
  }

  /**
   * Gets the value of the 'identifier' field.
   * @return The value of the 'identifier' field.
   */
  public java.util.List<java.lang.CharSequence> getIdentifier() {
    return identifier;
  }


  /**
   * Sets the value of the 'identifier' field.
   * @param value the value to set.
   */
  public void setIdentifier(java.util.List<java.lang.CharSequence> value) {
    this.identifier = value;
  }

  /**
   * Gets the value of the 'basedOn' field.
   * @return The value of the 'basedOn' field.
   */
  public java.lang.CharSequence getBasedOn() {
    return basedOn;
  }


  /**
   * Sets the value of the 'basedOn' field.
   * @param value the value to set.
   */
  public void setBasedOn(java.lang.CharSequence value) {
    this.basedOn = value;
  }

  /**
   * Gets the value of the 'parent' field.
   * @return The value of the 'parent' field.
   */
  public java.lang.CharSequence getParent() {
    return parent;
  }


  /**
   * Sets the value of the 'parent' field.
   * @param value the value to set.
   */
  public void setParent(java.lang.CharSequence value) {
    this.parent = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public java.lang.CharSequence getStatus() {
    return status;
  }


  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.CharSequence value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'method' field.
   * @return The value of the 'method' field.
   */
  public java.lang.CharSequence getMethod() {
    return method;
  }


  /**
   * Sets the value of the 'method' field.
   * @param value the value to set.
   */
  public void setMethod(java.lang.CharSequence value) {
    this.method = value;
  }

  /**
   * Gets the value of the 'code' field.
   * @return The value of the 'code' field.
   */
  public java.lang.CharSequence getCode() {
    return code;
  }


  /**
   * Sets the value of the 'code' field.
   * @param value the value to set.
   */
  public void setCode(java.lang.CharSequence value) {
    this.code = value;
  }

  /**
   * Gets the value of the 'subject' field.
   * @return The value of the 'subject' field.
   */
  public java.lang.CharSequence getSubject() {
    return subject;
  }


  /**
   * Sets the value of the 'subject' field.
   * @param value the value to set.
   */
  public void setSubject(java.lang.CharSequence value) {
    this.subject = value;
  }

  /**
   * Gets the value of the 'encounter' field.
   * @return The value of the 'encounter' field.
   */
  public java.lang.CharSequence getEncounter() {
    return encounter;
  }


  /**
   * Sets the value of the 'encounter' field.
   * @param value the value to set.
   */
  public void setEncounter(java.lang.CharSequence value) {
    this.encounter = value;
  }

  /**
   * Gets the value of the 'occurrenceDateTime' field.
   * @return The value of the 'occurrenceDateTime' field.
   */
  public java.lang.Object getOccurrenceDateTime() {
    return occurrenceDateTime;
  }


  /**
   * Sets the value of the 'occurrenceDateTime' field.
   * @param value the value to set.
   */
  public void setOccurrenceDateTime(java.lang.Object value) {
    this.occurrenceDateTime = value;
  }

  /**
   * Gets the value of the 'occurrencePeriod' field.
   * @return The value of the 'occurrencePeriod' field.
   */
  public java.lang.CharSequence getOccurrencePeriod() {
    return occurrencePeriod;
  }


  /**
   * Sets the value of the 'occurrencePeriod' field.
   * @param value the value to set.
   */
  public void setOccurrencePeriod(java.lang.CharSequence value) {
    this.occurrencePeriod = value;
  }

  /**
   * Gets the value of the 'condition' field.
   * @return The value of the 'condition' field.
   */
  public java.lang.CharSequence getCondition() {
    return condition;
  }


  /**
   * Sets the value of the 'condition' field.
   * @param value the value to set.
   */
  public void setCondition(java.lang.CharSequence value) {
    this.condition = value;
  }

  /**
   * Gets the value of the 'performer' field.
   * @return The value of the 'performer' field.
   */
  public java.lang.CharSequence getPerformer() {
    return performer;
  }


  /**
   * Sets the value of the 'performer' field.
   * @param value the value to set.
   */
  public void setPerformer(java.lang.CharSequence value) {
    this.performer = value;
  }

  /**
   * Gets the value of the 'reasonCode' field.
   * @return The value of the 'reasonCode' field.
   */
  public java.util.List<java.lang.CharSequence> getReasonCode() {
    return reasonCode;
  }


  /**
   * Sets the value of the 'reasonCode' field.
   * @param value the value to set.
   */
  public void setReasonCode(java.util.List<java.lang.CharSequence> value) {
    this.reasonCode = value;
  }

  /**
   * Gets the value of the 'reasonReference' field.
   * @return The value of the 'reasonReference' field.
   */
  public java.util.List<java.lang.CharSequence> getReasonReference() {
    return reasonReference;
  }


  /**
   * Sets the value of the 'reasonReference' field.
   * @param value the value to set.
   */
  public void setReasonReference(java.util.List<java.lang.CharSequence> value) {
    this.reasonReference = value;
  }

  /**
   * Gets the value of the 'basis' field.
   * @return The value of the 'basis' field.
   */
  public java.util.List<java.lang.CharSequence> getBasis() {
    return basis;
  }


  /**
   * Sets the value of the 'basis' field.
   * @param value the value to set.
   */
  public void setBasis(java.util.List<java.lang.CharSequence> value) {
    this.basis = value;
  }

  /**
   * Gets the value of the 'prediction' field.
   * @return The value of the 'prediction' field.
   */
  public java.util.List<java.lang.CharSequence> getPrediction() {
    return prediction;
  }


  /**
   * Sets the value of the 'prediction' field.
   * @param value the value to set.
   */
  public void setPrediction(java.util.List<java.lang.CharSequence> value) {
    this.prediction = value;
  }

  /**
   * Gets the value of the 'mitigation' field.
   * @return The value of the 'mitigation' field.
   */
  public java.lang.CharSequence getMitigation() {
    return mitigation;
  }


  /**
   * Sets the value of the 'mitigation' field.
   * @param value the value to set.
   */
  public void setMitigation(java.lang.CharSequence value) {
    this.mitigation = value;
  }

  /**
   * Gets the value of the 'note' field.
   * @return The value of the 'note' field.
   */
  public java.util.List<java.lang.CharSequence> getNote() {
    return note;
  }


  /**
   * Sets the value of the 'note' field.
   * @param value the value to set.
   */
  public void setNote(java.util.List<java.lang.CharSequence> value) {
    this.note = value;
  }

  /**
   * Creates a new RiskAssessment RecordBuilder.
   * @return A new RiskAssessment RecordBuilder
   */
  public static com.optum.fhir.avro.models.RiskAssessment.Builder newBuilder() {
    return new com.optum.fhir.avro.models.RiskAssessment.Builder();
  }

  /**
   * Creates a new RiskAssessment RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new RiskAssessment RecordBuilder
   */
  public static com.optum.fhir.avro.models.RiskAssessment.Builder newBuilder(com.optum.fhir.avro.models.RiskAssessment.Builder other) {
    if (other == null) {
      return new com.optum.fhir.avro.models.RiskAssessment.Builder();
    } else {
      return new com.optum.fhir.avro.models.RiskAssessment.Builder(other);
    }
  }

  /**
   * Creates a new RiskAssessment RecordBuilder by copying an existing RiskAssessment instance.
   * @param other The existing instance to copy.
   * @return A new RiskAssessment RecordBuilder
   */
  public static com.optum.fhir.avro.models.RiskAssessment.Builder newBuilder(com.optum.fhir.avro.models.RiskAssessment other) {
    if (other == null) {
      return new com.optum.fhir.avro.models.RiskAssessment.Builder();
    } else {
      return new com.optum.fhir.avro.models.RiskAssessment.Builder(other);
    }
  }

  /**
   * RecordBuilder for RiskAssessment instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<RiskAssessment>
    implements org.apache.avro.data.RecordBuilder<RiskAssessment> {

    private java.lang.CharSequence resourceType;
    private java.lang.CharSequence meta;
    private java.lang.CharSequence implicitRules;
    private java.lang.CharSequence language;
    private java.lang.CharSequence text;
    private java.util.List<java.lang.CharSequence> contained;
    private java.util.List<java.lang.CharSequence> extension;
    private java.util.List<java.lang.CharSequence> modifierExtension;
    private java.util.List<java.lang.CharSequence> identifier;
    private java.lang.CharSequence basedOn;
    private java.lang.CharSequence parent;
    private java.lang.CharSequence status;
    private java.lang.CharSequence method;
    private java.lang.CharSequence code;
    private java.lang.CharSequence subject;
    private java.lang.CharSequence encounter;
    private java.lang.Object occurrenceDateTime;
    private java.lang.CharSequence occurrencePeriod;
    private java.lang.CharSequence condition;
    private java.lang.CharSequence performer;
    private java.util.List<java.lang.CharSequence> reasonCode;
    private java.util.List<java.lang.CharSequence> reasonReference;
    private java.util.List<java.lang.CharSequence> basis;
    private java.util.List<java.lang.CharSequence> prediction;
    private java.lang.CharSequence mitigation;
    private java.util.List<java.lang.CharSequence> note;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.optum.fhir.avro.models.RiskAssessment.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.resourceType)) {
        this.resourceType = data().deepCopy(fields()[0].schema(), other.resourceType);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.meta)) {
        this.meta = data().deepCopy(fields()[1].schema(), other.meta);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.implicitRules)) {
        this.implicitRules = data().deepCopy(fields()[2].schema(), other.implicitRules);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.language)) {
        this.language = data().deepCopy(fields()[3].schema(), other.language);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.text)) {
        this.text = data().deepCopy(fields()[4].schema(), other.text);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.contained)) {
        this.contained = data().deepCopy(fields()[5].schema(), other.contained);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.extension)) {
        this.extension = data().deepCopy(fields()[6].schema(), other.extension);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.modifierExtension)) {
        this.modifierExtension = data().deepCopy(fields()[7].schema(), other.modifierExtension);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.identifier)) {
        this.identifier = data().deepCopy(fields()[8].schema(), other.identifier);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.basedOn)) {
        this.basedOn = data().deepCopy(fields()[9].schema(), other.basedOn);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.parent)) {
        this.parent = data().deepCopy(fields()[10].schema(), other.parent);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.status)) {
        this.status = data().deepCopy(fields()[11].schema(), other.status);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.method)) {
        this.method = data().deepCopy(fields()[12].schema(), other.method);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.code)) {
        this.code = data().deepCopy(fields()[13].schema(), other.code);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.subject)) {
        this.subject = data().deepCopy(fields()[14].schema(), other.subject);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.encounter)) {
        this.encounter = data().deepCopy(fields()[15].schema(), other.encounter);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.occurrenceDateTime)) {
        this.occurrenceDateTime = data().deepCopy(fields()[16].schema(), other.occurrenceDateTime);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.occurrencePeriod)) {
        this.occurrencePeriod = data().deepCopy(fields()[17].schema(), other.occurrencePeriod);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.condition)) {
        this.condition = data().deepCopy(fields()[18].schema(), other.condition);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.performer)) {
        this.performer = data().deepCopy(fields()[19].schema(), other.performer);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
      if (isValidValue(fields()[20], other.reasonCode)) {
        this.reasonCode = data().deepCopy(fields()[20].schema(), other.reasonCode);
        fieldSetFlags()[20] = other.fieldSetFlags()[20];
      }
      if (isValidValue(fields()[21], other.reasonReference)) {
        this.reasonReference = data().deepCopy(fields()[21].schema(), other.reasonReference);
        fieldSetFlags()[21] = other.fieldSetFlags()[21];
      }
      if (isValidValue(fields()[22], other.basis)) {
        this.basis = data().deepCopy(fields()[22].schema(), other.basis);
        fieldSetFlags()[22] = other.fieldSetFlags()[22];
      }
      if (isValidValue(fields()[23], other.prediction)) {
        this.prediction = data().deepCopy(fields()[23].schema(), other.prediction);
        fieldSetFlags()[23] = other.fieldSetFlags()[23];
      }
      if (isValidValue(fields()[24], other.mitigation)) {
        this.mitigation = data().deepCopy(fields()[24].schema(), other.mitigation);
        fieldSetFlags()[24] = other.fieldSetFlags()[24];
      }
      if (isValidValue(fields()[25], other.note)) {
        this.note = data().deepCopy(fields()[25].schema(), other.note);
        fieldSetFlags()[25] = other.fieldSetFlags()[25];
      }
    }

    /**
     * Creates a Builder by copying an existing RiskAssessment instance
     * @param other The existing instance to copy.
     */
    private Builder(com.optum.fhir.avro.models.RiskAssessment other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.resourceType)) {
        this.resourceType = data().deepCopy(fields()[0].schema(), other.resourceType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.meta)) {
        this.meta = data().deepCopy(fields()[1].schema(), other.meta);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.implicitRules)) {
        this.implicitRules = data().deepCopy(fields()[2].schema(), other.implicitRules);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.language)) {
        this.language = data().deepCopy(fields()[3].schema(), other.language);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.text)) {
        this.text = data().deepCopy(fields()[4].schema(), other.text);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.contained)) {
        this.contained = data().deepCopy(fields()[5].schema(), other.contained);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.extension)) {
        this.extension = data().deepCopy(fields()[6].schema(), other.extension);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.modifierExtension)) {
        this.modifierExtension = data().deepCopy(fields()[7].schema(), other.modifierExtension);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.identifier)) {
        this.identifier = data().deepCopy(fields()[8].schema(), other.identifier);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.basedOn)) {
        this.basedOn = data().deepCopy(fields()[9].schema(), other.basedOn);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.parent)) {
        this.parent = data().deepCopy(fields()[10].schema(), other.parent);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.status)) {
        this.status = data().deepCopy(fields()[11].schema(), other.status);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.method)) {
        this.method = data().deepCopy(fields()[12].schema(), other.method);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.code)) {
        this.code = data().deepCopy(fields()[13].schema(), other.code);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.subject)) {
        this.subject = data().deepCopy(fields()[14].schema(), other.subject);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.encounter)) {
        this.encounter = data().deepCopy(fields()[15].schema(), other.encounter);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.occurrenceDateTime)) {
        this.occurrenceDateTime = data().deepCopy(fields()[16].schema(), other.occurrenceDateTime);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.occurrencePeriod)) {
        this.occurrencePeriod = data().deepCopy(fields()[17].schema(), other.occurrencePeriod);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.condition)) {
        this.condition = data().deepCopy(fields()[18].schema(), other.condition);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.performer)) {
        this.performer = data().deepCopy(fields()[19].schema(), other.performer);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.reasonCode)) {
        this.reasonCode = data().deepCopy(fields()[20].schema(), other.reasonCode);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.reasonReference)) {
        this.reasonReference = data().deepCopy(fields()[21].schema(), other.reasonReference);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.basis)) {
        this.basis = data().deepCopy(fields()[22].schema(), other.basis);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.prediction)) {
        this.prediction = data().deepCopy(fields()[23].schema(), other.prediction);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.mitigation)) {
        this.mitigation = data().deepCopy(fields()[24].schema(), other.mitigation);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.note)) {
        this.note = data().deepCopy(fields()[25].schema(), other.note);
        fieldSetFlags()[25] = true;
      }
    }

    /**
      * Gets the value of the 'resourceType' field.
      * @return The value.
      */
    public java.lang.CharSequence getResourceType() {
      return resourceType;
    }


    /**
      * Sets the value of the 'resourceType' field.
      * @param value The value of 'resourceType'.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder setResourceType(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.resourceType = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'resourceType' field has been set.
      * @return True if the 'resourceType' field has been set, false otherwise.
      */
    public boolean hasResourceType() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'resourceType' field.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder clearResourceType() {
      resourceType = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'meta' field.
      * @return The value.
      */
    public java.lang.CharSequence getMeta() {
      return meta;
    }


    /**
      * Sets the value of the 'meta' field.
      * @param value The value of 'meta'.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder setMeta(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.meta = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'meta' field has been set.
      * @return True if the 'meta' field has been set, false otherwise.
      */
    public boolean hasMeta() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'meta' field.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder clearMeta() {
      meta = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'implicitRules' field.
      * @return The value.
      */
    public java.lang.CharSequence getImplicitRules() {
      return implicitRules;
    }


    /**
      * Sets the value of the 'implicitRules' field.
      * @param value The value of 'implicitRules'.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder setImplicitRules(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.implicitRules = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'implicitRules' field has been set.
      * @return True if the 'implicitRules' field has been set, false otherwise.
      */
    public boolean hasImplicitRules() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'implicitRules' field.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder clearImplicitRules() {
      implicitRules = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'language' field.
      * @return The value.
      */
    public java.lang.CharSequence getLanguage() {
      return language;
    }


    /**
      * Sets the value of the 'language' field.
      * @param value The value of 'language'.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder setLanguage(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.language = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'language' field has been set.
      * @return True if the 'language' field has been set, false otherwise.
      */
    public boolean hasLanguage() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'language' field.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder clearLanguage() {
      language = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'text' field.
      * @return The value.
      */
    public java.lang.CharSequence getText() {
      return text;
    }


    /**
      * Sets the value of the 'text' field.
      * @param value The value of 'text'.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder setText(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.text = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'text' field has been set.
      * @return True if the 'text' field has been set, false otherwise.
      */
    public boolean hasText() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'text' field.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder clearText() {
      text = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'contained' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getContained() {
      return contained;
    }


    /**
      * Sets the value of the 'contained' field.
      * @param value The value of 'contained'.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder setContained(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[5], value);
      this.contained = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'contained' field has been set.
      * @return True if the 'contained' field has been set, false otherwise.
      */
    public boolean hasContained() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'contained' field.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder clearContained() {
      contained = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'extension' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getExtension() {
      return extension;
    }


    /**
      * Sets the value of the 'extension' field.
      * @param value The value of 'extension'.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder setExtension(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[6], value);
      this.extension = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'extension' field has been set.
      * @return True if the 'extension' field has been set, false otherwise.
      */
    public boolean hasExtension() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'extension' field.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder clearExtension() {
      extension = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'modifierExtension' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getModifierExtension() {
      return modifierExtension;
    }


    /**
      * Sets the value of the 'modifierExtension' field.
      * @param value The value of 'modifierExtension'.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder setModifierExtension(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[7], value);
      this.modifierExtension = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'modifierExtension' field has been set.
      * @return True if the 'modifierExtension' field has been set, false otherwise.
      */
    public boolean hasModifierExtension() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'modifierExtension' field.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder clearModifierExtension() {
      modifierExtension = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'identifier' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getIdentifier() {
      return identifier;
    }


    /**
      * Sets the value of the 'identifier' field.
      * @param value The value of 'identifier'.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder setIdentifier(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[8], value);
      this.identifier = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'identifier' field has been set.
      * @return True if the 'identifier' field has been set, false otherwise.
      */
    public boolean hasIdentifier() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'identifier' field.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder clearIdentifier() {
      identifier = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'basedOn' field.
      * @return The value.
      */
    public java.lang.CharSequence getBasedOn() {
      return basedOn;
    }


    /**
      * Sets the value of the 'basedOn' field.
      * @param value The value of 'basedOn'.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder setBasedOn(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.basedOn = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'basedOn' field has been set.
      * @return True if the 'basedOn' field has been set, false otherwise.
      */
    public boolean hasBasedOn() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'basedOn' field.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder clearBasedOn() {
      basedOn = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'parent' field.
      * @return The value.
      */
    public java.lang.CharSequence getParent() {
      return parent;
    }


    /**
      * Sets the value of the 'parent' field.
      * @param value The value of 'parent'.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder setParent(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.parent = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'parent' field has been set.
      * @return True if the 'parent' field has been set, false otherwise.
      */
    public boolean hasParent() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'parent' field.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder clearParent() {
      parent = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.CharSequence getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder setStatus(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.status = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder clearStatus() {
      status = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'method' field.
      * @return The value.
      */
    public java.lang.CharSequence getMethod() {
      return method;
    }


    /**
      * Sets the value of the 'method' field.
      * @param value The value of 'method'.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder setMethod(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.method = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'method' field has been set.
      * @return True if the 'method' field has been set, false otherwise.
      */
    public boolean hasMethod() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'method' field.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder clearMethod() {
      method = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'code' field.
      * @return The value.
      */
    public java.lang.CharSequence getCode() {
      return code;
    }


    /**
      * Sets the value of the 'code' field.
      * @param value The value of 'code'.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder setCode(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.code = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'code' field has been set.
      * @return True if the 'code' field has been set, false otherwise.
      */
    public boolean hasCode() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'code' field.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder clearCode() {
      code = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'subject' field.
      * @return The value.
      */
    public java.lang.CharSequence getSubject() {
      return subject;
    }


    /**
      * Sets the value of the 'subject' field.
      * @param value The value of 'subject'.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder setSubject(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.subject = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'subject' field has been set.
      * @return True if the 'subject' field has been set, false otherwise.
      */
    public boolean hasSubject() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'subject' field.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder clearSubject() {
      subject = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'encounter' field.
      * @return The value.
      */
    public java.lang.CharSequence getEncounter() {
      return encounter;
    }


    /**
      * Sets the value of the 'encounter' field.
      * @param value The value of 'encounter'.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder setEncounter(java.lang.CharSequence value) {
      validate(fields()[15], value);
      this.encounter = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'encounter' field has been set.
      * @return True if the 'encounter' field has been set, false otherwise.
      */
    public boolean hasEncounter() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'encounter' field.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder clearEncounter() {
      encounter = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'occurrenceDateTime' field.
      * @return The value.
      */
    public java.lang.Object getOccurrenceDateTime() {
      return occurrenceDateTime;
    }


    /**
      * Sets the value of the 'occurrenceDateTime' field.
      * @param value The value of 'occurrenceDateTime'.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder setOccurrenceDateTime(java.lang.Object value) {
      validate(fields()[16], value);
      this.occurrenceDateTime = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'occurrenceDateTime' field has been set.
      * @return True if the 'occurrenceDateTime' field has been set, false otherwise.
      */
    public boolean hasOccurrenceDateTime() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'occurrenceDateTime' field.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder clearOccurrenceDateTime() {
      occurrenceDateTime = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'occurrencePeriod' field.
      * @return The value.
      */
    public java.lang.CharSequence getOccurrencePeriod() {
      return occurrencePeriod;
    }


    /**
      * Sets the value of the 'occurrencePeriod' field.
      * @param value The value of 'occurrencePeriod'.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder setOccurrencePeriod(java.lang.CharSequence value) {
      validate(fields()[17], value);
      this.occurrencePeriod = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'occurrencePeriod' field has been set.
      * @return True if the 'occurrencePeriod' field has been set, false otherwise.
      */
    public boolean hasOccurrencePeriod() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'occurrencePeriod' field.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder clearOccurrencePeriod() {
      occurrencePeriod = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'condition' field.
      * @return The value.
      */
    public java.lang.CharSequence getCondition() {
      return condition;
    }


    /**
      * Sets the value of the 'condition' field.
      * @param value The value of 'condition'.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder setCondition(java.lang.CharSequence value) {
      validate(fields()[18], value);
      this.condition = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'condition' field has been set.
      * @return True if the 'condition' field has been set, false otherwise.
      */
    public boolean hasCondition() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'condition' field.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder clearCondition() {
      condition = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'performer' field.
      * @return The value.
      */
    public java.lang.CharSequence getPerformer() {
      return performer;
    }


    /**
      * Sets the value of the 'performer' field.
      * @param value The value of 'performer'.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder setPerformer(java.lang.CharSequence value) {
      validate(fields()[19], value);
      this.performer = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'performer' field has been set.
      * @return True if the 'performer' field has been set, false otherwise.
      */
    public boolean hasPerformer() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'performer' field.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder clearPerformer() {
      performer = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'reasonCode' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getReasonCode() {
      return reasonCode;
    }


    /**
      * Sets the value of the 'reasonCode' field.
      * @param value The value of 'reasonCode'.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder setReasonCode(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[20], value);
      this.reasonCode = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'reasonCode' field has been set.
      * @return True if the 'reasonCode' field has been set, false otherwise.
      */
    public boolean hasReasonCode() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'reasonCode' field.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder clearReasonCode() {
      reasonCode = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'reasonReference' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getReasonReference() {
      return reasonReference;
    }


    /**
      * Sets the value of the 'reasonReference' field.
      * @param value The value of 'reasonReference'.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder setReasonReference(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[21], value);
      this.reasonReference = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'reasonReference' field has been set.
      * @return True if the 'reasonReference' field has been set, false otherwise.
      */
    public boolean hasReasonReference() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'reasonReference' field.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder clearReasonReference() {
      reasonReference = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'basis' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getBasis() {
      return basis;
    }


    /**
      * Sets the value of the 'basis' field.
      * @param value The value of 'basis'.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder setBasis(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[22], value);
      this.basis = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'basis' field has been set.
      * @return True if the 'basis' field has been set, false otherwise.
      */
    public boolean hasBasis() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'basis' field.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder clearBasis() {
      basis = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'prediction' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getPrediction() {
      return prediction;
    }


    /**
      * Sets the value of the 'prediction' field.
      * @param value The value of 'prediction'.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder setPrediction(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[23], value);
      this.prediction = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'prediction' field has been set.
      * @return True if the 'prediction' field has been set, false otherwise.
      */
    public boolean hasPrediction() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'prediction' field.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder clearPrediction() {
      prediction = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'mitigation' field.
      * @return The value.
      */
    public java.lang.CharSequence getMitigation() {
      return mitigation;
    }


    /**
      * Sets the value of the 'mitigation' field.
      * @param value The value of 'mitigation'.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder setMitigation(java.lang.CharSequence value) {
      validate(fields()[24], value);
      this.mitigation = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'mitigation' field has been set.
      * @return True if the 'mitigation' field has been set, false otherwise.
      */
    public boolean hasMitigation() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'mitigation' field.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder clearMitigation() {
      mitigation = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'note' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getNote() {
      return note;
    }


    /**
      * Sets the value of the 'note' field.
      * @param value The value of 'note'.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder setNote(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[25], value);
      this.note = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'note' field has been set.
      * @return True if the 'note' field has been set, false otherwise.
      */
    public boolean hasNote() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'note' field.
      * @return This builder.
      */
    public com.optum.fhir.avro.models.RiskAssessment.Builder clearNote() {
      note = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public RiskAssessment build() {
      try {
        RiskAssessment record = new RiskAssessment();
        record.resourceType = fieldSetFlags()[0] ? this.resourceType : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.meta = fieldSetFlags()[1] ? this.meta : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.implicitRules = fieldSetFlags()[2] ? this.implicitRules : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.language = fieldSetFlags()[3] ? this.language : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.text = fieldSetFlags()[4] ? this.text : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.contained = fieldSetFlags()[5] ? this.contained : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[5]);
        record.extension = fieldSetFlags()[6] ? this.extension : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[6]);
        record.modifierExtension = fieldSetFlags()[7] ? this.modifierExtension : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[7]);
        record.identifier = fieldSetFlags()[8] ? this.identifier : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[8]);
        record.basedOn = fieldSetFlags()[9] ? this.basedOn : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.parent = fieldSetFlags()[10] ? this.parent : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.status = fieldSetFlags()[11] ? this.status : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.method = fieldSetFlags()[12] ? this.method : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.code = fieldSetFlags()[13] ? this.code : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.subject = fieldSetFlags()[14] ? this.subject : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.encounter = fieldSetFlags()[15] ? this.encounter : (java.lang.CharSequence) defaultValue(fields()[15]);
        record.occurrenceDateTime = fieldSetFlags()[16] ? this.occurrenceDateTime :  defaultValue(fields()[16]);
        record.occurrencePeriod = fieldSetFlags()[17] ? this.occurrencePeriod : (java.lang.CharSequence) defaultValue(fields()[17]);
        record.condition = fieldSetFlags()[18] ? this.condition : (java.lang.CharSequence) defaultValue(fields()[18]);
        record.performer = fieldSetFlags()[19] ? this.performer : (java.lang.CharSequence) defaultValue(fields()[19]);
        record.reasonCode = fieldSetFlags()[20] ? this.reasonCode : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[20]);
        record.reasonReference = fieldSetFlags()[21] ? this.reasonReference : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[21]);
        record.basis = fieldSetFlags()[22] ? this.basis : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[22]);
        record.prediction = fieldSetFlags()[23] ? this.prediction : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[23]);
        record.mitigation = fieldSetFlags()[24] ? this.mitigation : (java.lang.CharSequence) defaultValue(fields()[24]);
        record.note = fieldSetFlags()[25] ? this.note : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[25]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<RiskAssessment>
    WRITER$ = (org.apache.avro.io.DatumWriter<RiskAssessment>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<RiskAssessment>
    READER$ = (org.apache.avro.io.DatumReader<RiskAssessment>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










